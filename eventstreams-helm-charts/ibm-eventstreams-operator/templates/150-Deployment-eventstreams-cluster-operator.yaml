###############################################################################
#
# Licensed Materials - Property of IBM
#
# 5737-H33
#
# (C) Copyright IBM Corp. 2019  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventstreams-cluster-operator
  labels:
    app: {{ template "eventstreams.name" . }}
    chart: {{ template "eventstreams.chart" . }}
    component: deployment
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/instance: eventstreams-operator
    app.kubernetes.io/managed-by: olm
    app.kubernetes.io/name: eventstreams-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: eventstreams-cluster-operator
      eventstreams.ibm.com/kind: cluster-operator
  template:
    metadata:
      annotations:
        productID: "2cba508800504d0abfa48a0e2c4ecbe2"
        productName: "IBM Event Streams"
        productVersion: "2020.2.1"
        productMetric: "VIRTUAL_PROCESSOR_CORE"
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
      labels:
        name: eventstreams-cluster-operator
        eventstreams.ibm.com/kind: cluster-operator
        app: eventstreams
        app.kubernetes.io/instance: eventstreams-operator
        app.kubernetes.io/managed-by: olm
        app.kubernetes.io/name: eventstreams-operator
    spec:
      imagePullSecrets:
      - name: ibm-entitlement-key
      serviceAccountName: eventstreams-cluster-operator
      initContainers:
      - name: install-validating-webhook
        image: {{ default .Values.operatorInit.image.repository .Values.imageRepositoryOverride }}/{{ .Values.operatorInit.image.name }}:{{ .Values.operatorInit.image.tag }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
        env:
          - name: EVENTSTREAMS_OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: EVENTSTREAMS_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
        resources:
          limits:
            cpu: 1000m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 256Mi
      containers:
        - name: eventstreams-cluster-operator
          image: {{ default .Values.operator.image.repository .Values.imageRepositoryOverride }}/{{ .Values.operator.image.name }}:{{ .Values.operator.image.tag }}
          args:
          - /opt/strimzi/bin/eventstreams_cluster_operator_run.sh
          env:
            - name: WATCHED_NAMESPACE
              {{- if .Values.watchAnyNamespace }}
              value: "*"
              {{- else }}
              {{- if .Values.watchNamespaces -}}
              {{- $ns := .Values.watchNamespaces -}}
              {{- $ns := append $ns .Release.Namespace }}
              value: "{{ join "," $ns }}"
              {{- else }}
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
              {{- end }}
              {{- end }}
            - name: EVENTSTREAMS_IMAGE_PULL_POLICY
              value: Always
            - name: EVENTSTREAMS_FULL_RECONCILIATION_INTERVAL_MS
              value: {{ .Values.fullReconciliationIntervalMs | quote }}
            - name: EVENTSTREAMS_OPERATION_TIMEOUT_MS
              value: {{ .Values.operationTimeoutMs | quote }}
            {{- if .Values.imagePullSecrets }}
            - name: EVENTSTREAMS_IMAGE_PULL_SECRETS
              value: {{ .Values.imagePullSecrets }}
            {{- end }}
            - name: EVENTSTREAMS_LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # Core images
            {{ template "strimzi.kafka.image.map" . }}
            - name: EVENTSTREAMS_DEFAULT_TOPIC_OPERATOR_IMAGE
              value: "{{ default .Values.topicOperator.image.repository .Values.imageRepositoryOverride }}/{{ .Values.topicOperator.image.name }}:{{ .Values.topicOperator.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_USER_OPERATOR_IMAGE
              value: "{{ default .Values.userOperator.image.repository .Values.imageRepositoryOverride }}/{{ .Values.userOperator.image.name }}:{{ .Values.userOperator.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_KAFKA_INIT_IMAGE
              value: "{{ default .Values.kafkaInit.image.repository .Values.imageRepositoryOverride }}/{{ .Values.kafkaInit.image.name }}:{{ .Values.kafkaInit.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_JMXTRANS_IMAGE
              value: "{{ default .Values.jmxTrans.image.repository .Values.imageRepositoryOverride }}/{{ .Values.jmxTrans.image.name }}:{{ .Values.jmxTrans.image.tag }}"
            # Proprietary images
            - name: EVENTSTREAMS_DEFAULT_REST_PRODUCER_IMAGE
              value: "{{ default .Values.restProducer.image.repository .Values.imageRepositoryOverride }}/{{ .Values.restProducer.image.name }}:{{ .Values.restProducer.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_ADMIN_API_IMAGE
              value: "{{ default .Values.adminApi.image.repository .Values.imageRepositoryOverride }}/{{ .Values.adminApi.image.name }}:{{ .Values.adminApi.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_SCHEMA_REGISTRY_IMAGE
              value: "{{ default .Values.schemaRegistry.image.repository .Values.imageRepositoryOverride }}/{{ .Values.schemaRegistry.image.name }}:{{ .Values.schemaRegistry.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_SCHEMA_REGISTRY_AVRO_IMAGE
              value: "{{ default .Values.schemaRegistryAvro.image.repository .Values.imageRepositoryOverride }}/{{ .Values.schemaRegistryAvro.image.name }}:{{ .Values.schemaRegistryAvro.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_SCHEMA_REGISTRY_PROXY_IMAGE
              value: "{{ default .Values.schemaRegistryProxy.image.repository .Values.imageRepositoryOverride }}/{{ .Values.schemaRegistryProxy.image.name }}:{{ .Values.schemaRegistryProxy.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_ADMIN_UI_IMAGE
              value: "{{ default .Values.adminUi.image.repository .Values.imageRepositoryOverride }}/{{ .Values.adminUi.image.name }}:{{ .Values.adminUi.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_ADMIN_UI_REDIS_IMAGE
              value: "{{ default .Values.adminUiDatabase.image.repository .Values.imageRepositoryOverride }}/{{ .Values.adminUiDatabase.image.name }}:{{ .Values.adminUiDatabase.image.tag }}"
            - name: EVENTSTREAMS_DEFAULT_COLLECTOR_IMAGE
              value: "{{ default .Values.collector.image.repository .Values.imageRepositoryOverride }}/{{ .Values.collector.image.name }}:{{ .Values.collector.image.tag }}"
          livenessProbe:
            httpGet:
              path: /healthy
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
                - MKNOD
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
          resources:
            limits:
              cpu: 1000m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: eventstreams
              mountPath: /etc/eventstreams
      volumes:
      - name: eventstreams
        secret:
          secretName: eventstreams-cluster-operator
          # Secret created by the init-container
          # optional so as to not block startup
          optional: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
  strategy:
    type: Recreate
